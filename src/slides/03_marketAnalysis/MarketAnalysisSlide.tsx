import React from 'react'
import { motion } from 'framer-motion'
import { useTheme } from '../../contexts/ThemeContext'
import styles from './MarketAnalysisSlide.module.scss'

interface TaskItemProps {
  number: number
  text: string
  delay?: number
}

const TaskItem: React.FC<TaskItemProps> = ({ number, text, delay = 0 }) => (
  <motion.li 
    className={styles.taskItem}
    initial={{ opacity: 0, x: -20 }}
    animate={{ opacity: 1, x: 0 }}
    transition={{ duration: 0.6, delay }}
  >
    <div className={styles.taskNumber}>{number}</div>
    <div className={styles.taskText} dangerouslySetInnerHTML={{ __html: text }} />
  </motion.li>
)

interface PhaseProps {
  phaseClass: string
  icon: string
  title: string
  subtitle: string
  tasks: Array<{ number: number; text: string }>
  delay?: number
}

const Phase: React.FC<PhaseProps> = ({ phaseClass, icon, title, subtitle, tasks, delay = 0 }) => (
  <motion.div 
    className={`${styles.phase} ${styles[phaseClass.replace('-', '')]}`}
    initial={{ opacity: 0, y: 30 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.6, delay }}
  >
    <div className={styles.phaseHeader}>
      <div className={styles.phaseIcon}>{icon}</div>
      <div>
        <div className={styles.phaseTitle}>{title}</div>
        <div className={styles.phaseSubtitle}>{subtitle}</div>
      </div>
    </div>
    <ul className={styles.tasksList}>
      {tasks.map((task, index) => (
        <TaskItem 
          key={task.number}
          number={task.number}
          text={task.text}
          delay={delay + 0.1 + index * 0.1}
        />
      ))}
    </ul>
  </motion.div>
)

export const MarketAnalysisSlide: React.FC = () => {
  const { isPrintTheme } = useTheme()

  const phases = [
    {
      phaseClass: 'phase-1',
      icon: 'üîç',
      title: '–ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó',
      subtitle: '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ',
      tasks: [
        {
          number: 1,
          text: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ <strong>–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π</strong> –∏ –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ PostgreSQL, MongoDB –∏ Cassandra'
        },
        {
          number: 2,
          text: '–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π <strong>–∞–Ω–∞–ª–∏–∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</strong> –°–£–ë–î –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –±–µ–Ω—á–º–∞—Ä–∫–∞ YCSB'
        },
        {
          number: 3,
          text: '–ê–Ω–∞–ª–∏–∑ <strong>—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–Ω—á–º–∞—Ä–∫–∏–Ω–≥–∞</strong> –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
        }
      ]
    },
    {
      phaseClass: 'phase-2',
      icon: '‚öôÔ∏è',
      title: '–ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ù–´–•',
      subtitle: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è',
      tasks: [
        {
          number: 4,
          text: '–ê–Ω–∞–ª–∏–∑ –∏ –≤—ã–±–æ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ <strong>JSON-–¥–∞—Ç–∞—Å–µ—Ç–∞</strong> –Ω–∞—É—á–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –æ–±—ä–µ–º–æ–º ~12 –ì–ë –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
        },
        {
          number: 5,
          text: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö <strong>—Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏</strong> –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–π –°–£–ë–î —Å —É—á–µ—Ç–æ–º –∏—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π'
        },
        {
          number: 6,
          text: '–°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–µ—Ü–∏–∑–∏–æ–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ <strong>–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è</strong> –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ'
        }
      ]
    },
    {
      phaseClass: 'phase-3',
      icon: 'üîß',
      title: '–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø',
      subtitle: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
      tasks: [
        {
          number: 7,
          text: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è <strong>–∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤</strong> –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤'
        },
        {
          number: 8,
          text: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è <strong>–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤</strong> PostgreSQL, MongoDB –∏ Cassandra –¥–ª—è –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫'
        },
        {
          number: 9,
          text: '–î–µ—Ç–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <strong>YCSB</strong> –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ c —à–∏—Ä–æ–∫–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º–∞'
        }
      ]
    },
    {
      phaseClass: 'phase-4',
      icon: 'üìä',
      title: '–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó',
      subtitle: '–°–±–æ—Ä –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
      tasks: [
        {
          number: 10,
          text: '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π <strong>—Å–µ—Ä–∏–∏ —Ç–µ—Å—Ç–æ–≤</strong> –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —É—Å–ª–æ–≤–∏–π'
        },
        {
          number: 11,
          text: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ <strong>Python-—Å–∫—Ä–∏–ø—Ç–∞</strong> –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'
        },
        {
          number: 12,
          text: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö <strong>–¥–∞—à–±–æ—Ä–¥–æ–≤ –≤ Apache Superset</strong> –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'
        }
      ]
    }
  ]

  return (
    <div className={`${styles.marketAnalysisSlide} ${isPrintTheme ? styles.printTheme : ''}`}>
      {/* Title Container */}
      <motion.div 
        className={styles.slideTitleContainer}
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
        <h1 className={styles.slideTitle}>–ü –ï –† –ï –ß –ï –ù –¨&nbsp;&nbsp;–† –ï –® –Å –ù –ù –´ –•&nbsp;&nbsp;–ó –ê –î –ê –ß</h1>
      </motion.div>

      {/* Content Container */}
      <div className={styles.contentContainer}>
        <div className={styles.contentWrapper}>
          <div className={styles.phasesGrid}>
            {phases.map((phase, index) => (
              <Phase
                key={phase.phaseClass}
                {...phase}
                delay={0.2 + index * 0.1}
              />
            ))}
          </div>

          {/* Summary */}
          <motion.div 
            className={styles.summary}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.8 }}
          >
            <div className={styles.summaryText}>
              –í–°–ï–ì–û –í–´–ü–û–õ–ù–ï–ù–û: 12 –∑–∞–¥–∞—á | 4 —ç—Ç–∞–ø–∞ | 3 –°–£–ë–î | 189 —Ç–µ—Å—Ç–æ–≤
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  )
} 